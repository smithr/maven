<ruleset>
    <rule ref="rulesets/basic.xml/AvoidDecimalLiteralsInBigDecimalConstructor"/>
    <rule ref="rulesets/basic.xml/AvoidMultipleUnaryOperators"/>
    <rule ref="rulesets/basic.xml/AvoidThreadGroup"/>
    <rule ref="rulesets/basic.xml/AvoidUsingHardCodedIP"/>
    <rule ref="rulesets/basic.xml/BigIntegerInstantiation"/>
    <rule ref="rulesets/basic.xml/BooleanInstantiation"/>
    <rule ref="rulesets/basic.xml/BrokenNullCheck"/>
    <rule ref="rulesets/basic.xml/CheckResultSet"/>
    <rule ref="rulesets/basic.xml/ClassCastExceptionWithToArray"/>
    <rule ref="rulesets/basic.xml/CollapsibleIfStatements"/>
    <rule ref="rulesets/basic.xml/DoubleCheckedLocking"/>
    <rule ref="rulesets/basic.xml/EmptyCatchBlock"/>
    <rule ref="rulesets/basic.xml/EmptyFinallyBlock"/>
    <rule ref="rulesets/basic.xml/EmptyIfStmt"/>
    <rule ref="rulesets/basic.xml/EmptyInitializer"/>
    <rule ref="rulesets/basic.xml/EmptyStatementNotInLoop"/>
    <rule ref="rulesets/basic.xml/EmptyStaticInitializer"/>
    <rule ref="rulesets/basic.xml/EmptySwitchStatements"/>
    <rule ref="rulesets/basic.xml/EmptySynchronizedBlock"/>
    <rule ref="rulesets/basic.xml/EmptyTryBlock"/>
    <rule ref="rulesets/basic.xml/EmptyWhileStmt"/>
    <rule ref="rulesets/basic.xml/MisplacedNullCheck"/>
    <rule ref="rulesets/basic.xml/OverrideBothEqualsAndHashcode"/>
    <rule ref="rulesets/basic.xml/UnconditionalIfStatement"/>
    <rule ref="rulesets/basic.xml/UnnecessaryFinalModifier"/>
    <rule ref="rulesets/basic.xml/UnnecessaryReturn"/>
    <rule ref="rulesets/basic.xml/UnusedNullCheckInEquals"/>
    <rule ref="rulesets/basic.xml/UselessOperationOnImmutable"/>
    <rule ref="rulesets/basic.xml/UselessOverridingMethod"/>
    <rule ref="rulesets/braces.xml/ForLoopsMustUseBraces"/>
    <rule ref="rulesets/braces.xml/IfElseStmtsMustUseBraces"/>
    <rule ref="rulesets/braces.xml/IfStmtsMustUseBraces"/>
    <rule ref="rulesets/braces.xml/WhileLoopsMustUseBraces"/>
    <rule ref="rulesets/clone.xml/CloneMethodMustImplementCloneable"/>
    <rule ref="rulesets/clone.xml/CloneThrowsCloneNotSupportedException"/>
    <rule ref="rulesets/clone.xml/ProperCloneImplementation"/>
    <rule ref="rulesets/codesize.xml/CyclomaticComplexity"/>
    <rule ref="rulesets/codesize.xml/ExcessiveClassLength"/>
    <rule ref="rulesets/codesize.xml/ExcessiveMethodLength"/>
    <rule ref="rulesets/codesize.xml/ExcessiveParameterList"/>
    <rule ref="rulesets/codesize.xml/ExcessivePublicCount"/>
    <rule ref="rulesets/codesize.xml/NPathComplexity"/>
    <rule ref="rulesets/codesize.xml/NcssConstructorCount"/>
    <rule ref="rulesets/codesize.xml/NcssMethodCount"/>
    <rule ref="rulesets/codesize.xml/NcssTypeCount"/>
    <rule ref="rulesets/codesize.xml/TooManyFields"/>
    <rule ref="rulesets/codesize.xml/TooManyMethods"/>
    <rule ref="rulesets/controversial.xml/AssignmentInOperand"/>
    <rule ref="rulesets/controversial.xml/AtLeastOneConstructor"/>
    <rule ref="rulesets/controversial.xml/AvoidUsingShortType"/>
    <rule ref="rulesets/controversial.xml/DoNotCallGarbageCollectionExplicitly"/>
    <rule ref="rulesets/controversial.xml/DontImportSun"/>
    <rule ref="rulesets/controversial.xml/NullAssignment"/>
    <rule ref="rulesets/controversial.xml/UnnecessaryParentheses"/>
    <rule ref="rulesets/controversial.xml/UnusedModifier"/>
    <rule ref="rulesets/coupling.xml/CouplingBetweenObjects"/>
    <rule ref="rulesets/coupling.xml/ExcessiveImports"/>
    <rule ref="rulesets/coupling.xml/LooseCoupling"/>
    <rule ref="rulesets/design.xml/AssignmentToNonFinalStatic"/>
    <rule ref="rulesets/design.xml/AvoidConstantsInterface"/>
    <rule ref="rulesets/design.xml/AvoidDeeplyNestedIfStmts"/>
    <rule ref="rulesets/design.xml/AvoidInstanceofChecksInCatchClause"/>
    <rule ref="rulesets/design.xml/AvoidProtectedFieldInFinalClass"/>
    <rule ref="rulesets/design.xml/AvoidReassigningParameters"/>
    <rule ref="rulesets/design.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal"/>
    <rule ref="rulesets/design.xml/CloseResource"/>
    <rule ref="rulesets/design.xml/ConstructorCallsOverridableMethod"/>
    <rule ref="rulesets/design.xml/EmptyMethodInAbstractClassShouldBeAbstract"/>
    <rule ref="rulesets/design.xml/EqualsNull"/>
    <rule ref="rulesets/design.xml/FinalFieldCouldBeStatic"/>
    <rule ref="rulesets/design.xml/IdempotentOperations"/>
    <rule ref="rulesets/design.xml/ImmutableField"/>
    <rule ref="rulesets/design.xml/InstantiationToGetClass"/>
    <rule ref="rulesets/design.xml/MissingBreakInSwitch"/>
    <rule ref="rulesets/design.xml/MissingStaticMethodInNonInstantiatableClass"/>
    <rule ref="rulesets/design.xml/NonStaticInitializer"/>
    <rule ref="rulesets/design.xml/OptimizableToArrayCall"/>
    <rule ref="rulesets/design.xml/PositionLiteralsFirstInComparisons"/>
    <rule ref="rulesets/design.xml/PreserveStackTrace"/>
    <rule ref="rulesets/design.xml/ReturnEmptyArrayRatherThanNull"/>
    <rule ref="rulesets/design.xml/SimplifyBooleanExpressions"/>
    <rule ref="rulesets/design.xml/SimplifyBooleanReturns"/>
    <rule ref="rulesets/design.xml/SimplifyConditional"/>
    <rule ref="rulesets/design.xml/SingularField"/>
    <rule ref="rulesets/design.xml/SwitchStmtsShouldHaveDefault"/>
    <rule ref="rulesets/design.xml/TooFewBranchesForASwitchStatement"/>
    <rule ref="rulesets/design.xml/UncommentedEmptyMethod"/>
    <rule ref="rulesets/design.xml/UnnecessaryLocalBeforeReturn"/>
    <rule ref="rulesets/design.xml/UnsynchronizedStaticDateFormatter"/>
    <rule ref="rulesets/design.xml/UseCollectionIsEmpty"/>
    <rule ref="rulesets/design.xml/UseNotifyAllInsteadOfNotify"/>
    <rule ref="rulesets/finalizers.xml/AvoidCallingFinalize"/>
    <rule ref="rulesets/finalizers.xml/EmptyFinalizer"/>
    <rule ref="rulesets/finalizers.xml/FinalizeDoesNotCallSuperFinalize"/>
    <rule ref="rulesets/finalizers.xml/FinalizeOnlyCallsSuperFinalize"/>
    <rule ref="rulesets/finalizers.xml/FinalizeOverloaded"/>
    <rule ref="rulesets/finalizers.xml/FinalizeShouldBeProtected"/>
    <rule ref="rulesets/imports.xml/DontImportJavaLang"/>
    <rule ref="rulesets/imports.xml/DuplicateImports"/>
    <rule ref="rulesets/j2ee.xml/DoNotCallSystemExit"/>
    <rule ref="rulesets/j2ee.xml/UseProperClassLoader"/>
    <rule ref="rulesets/javabeans.xml/MissingSerialVersionUID"/>
    <rule ref="rulesets/logging-jakarta-commons.xml/ProperLogger"/>
    <rule ref="rulesets/logging-jakarta-commons.xml/UseCorrectExceptionLogging"/>
    <rule ref="rulesets/logging-java.xml/AvoidPrintStackTrace"/>
    <rule ref="rulesets/logging-java.xml/LoggerIsNotStaticFinal"/>
    <rule ref="rulesets/logging-java.xml/MoreThanOneLogger"/>
    <rule ref="rulesets/logging-java.xml/SystemPrintln"/>
    <rule ref="rulesets/migrating.xml/AvoidAssertAsIdentifier"/>
    <rule ref="rulesets/migrating.xml/AvoidEnumAsIdentifier"/>
    <rule ref="rulesets/migrating.xml/IntegerInstantiation"/>
    <rule ref="rulesets/migrating.xml/ReplaceEnumerationWithIterator"/>
    <rule ref="rulesets/migrating.xml/ReplaceHashtableWithMap"/>
    <rule ref="rulesets/migrating.xml/ReplaceVectorWithList"/>
    <rule ref="rulesets/naming.xml/AvoidDollarSigns"/>
    <rule ref="rulesets/naming.xml/BooleanGetMethodName"/>
    <rule ref="rulesets/naming.xml/ClassNamingConventions"/>
    <rule ref="rulesets/naming.xml/MethodNamingConventions"/>
    <rule ref="rulesets/naming.xml/MethodWithSameNameAsEnclosingClass"/>
    <rule ref="rulesets/naming.xml/MisleadingVariableName"/>
    <rule ref="rulesets/naming.xml/NoPackage"/>
    <rule ref="rulesets/naming.xml/ShortMethodName"/>
    <rule ref="rulesets/naming.xml/SuspiciousConstantFieldName"/>
    <rule ref="rulesets/naming.xml/SuspiciousEqualsMethodName"/>
    <rule ref="rulesets/naming.xml/SuspiciousHashcodeMethodName"/>
    <rule ref="rulesets/optimizations.xml/AddEmptyString"/>
    <rule ref="rulesets/optimizations.xml/AvoidArrayLoops"/>
    <rule ref="rulesets/optimizations.xml/SimplifyStartsWith"/>
    <rule ref="rulesets/optimizations.xml/UnnecessaryWrapperObjectCreation"/>
    <rule ref="rulesets/optimizations.xml/UseArrayListInsteadOfVector"/>
    <rule ref="rulesets/optimizations.xml/UseArraysAsList"/>
    <rule ref="rulesets/optimizations.xml/UseStringBufferForStringAppends"/>
    <rule ref="rulesets/strictexception.xml/AvoidCatchingNPE"/>
    <rule ref="rulesets/strictexception.xml/AvoidCatchingThrowable"/>
    <rule ref="rulesets/strictexception.xml/AvoidRethrowingException"/>
    <rule ref="rulesets/strictexception.xml/AvoidThrowingNewInstanceOfSameException"/>
    <rule ref="rulesets/strictexception.xml/AvoidThrowingNullPointerException"/>
    <rule ref="rulesets/strictexception.xml/AvoidThrowingRawExceptionTypes"/>
    <rule ref="rulesets/strictexception.xml/DoNotExtendJavaLangError"/>
    <rule ref="rulesets/strictexception.xml/DoNotThrowExceptionInFinally"/>
    <rule ref="rulesets/strictexception.xml/ExceptionAsFlowControl"/>
    <rule ref="rulesets/strictexception.xml/SignatureDeclareThrowsException"/>
    <rule ref="rulesets/strings.xml/AppendCharacterWithChar"/>
    <rule ref="rulesets/strings.xml/AvoidDuplicateLiterals"/>
    <rule ref="rulesets/strings.xml/AvoidStringBufferField"/>
    <rule ref="rulesets/strings.xml/ConsecutiveLiteralAppends"/>
    <rule ref="rulesets/strings.xml/InefficientEmptyStringCheck"/>
    <rule ref="rulesets/strings.xml/InefficientStringBuffering"/>
    <rule ref="rulesets/strings.xml/InsufficientStringBufferDeclaration"/>
    <rule ref="rulesets/strings.xml/StringBufferInstantiationWithChar"/>
    <rule ref="rulesets/strings.xml/StringInstantiation"/>
    <rule ref="rulesets/strings.xml/StringToString"/>
    <rule ref="rulesets/strings.xml/UnnecessaryCaseChange"/>
    <rule ref="rulesets/strings.xml/UseEqualsToCompareStrings"/>
    <rule ref="rulesets/strings.xml/UseIndexOfChar"/>
    <rule ref="rulesets/strings.xml/UseStringBufferLength"/>
    <rule ref="rulesets/strings.xml/UselessStringValueOf"/>
    <rule ref="rulesets/sunsecure.xml/ArrayIsStoredDirectly"/>
    <rule ref="rulesets/sunsecure.xml/MethodReturnsInternalArray"/>
    <rule ref="rulesets/unusedcode.xml/UnusedFormalParameter"/>
    <rule ref="rulesets/unusedcode.xml/UnusedLocalVariable"/>
    <rule ref="rulesets/unusedcode.xml/UnusedPrivateField"/>
    <rule ref="rulesets/unusedcode.xml/UnusedPrivateMethod"/>
    <rule ref="rulesets/design.xml/CompareObjectsWithEquals"/>
</ruleset>